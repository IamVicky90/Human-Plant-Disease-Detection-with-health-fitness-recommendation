version: 2
jobs:
  build:
    environment:
      IMAGE_NAME: IamVicky90/Human-and-Plant-Disease-Detection-with-Health-And-Fitness-Recommendation
    docker:
      - image: ubuntu
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
  publish-latest:
    environment:
      IMAGE_NAME: building-on-ubuntu
    docker:
      - image: ubuntu
    steps:
      - setup_remote_docker
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker push $IMAGE_NAME:latest
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: main
              
# version: 2.1

# jobs:
#   build-and-test:
#     # executor: health/default
#     docker:
#       - image: ubuntu-2004:202010-01
#         auth:
#           username: iamvicky90
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#     steps:
#       - checkout
#       - restore_cache:
#           key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#       - run:
#           name: Install Python deps in a venv
#           command: |
#             echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
#             echo 'export IMAGE_NAME=${DOCKER_IMAGE_NAME}' >> $BASH_ENV
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install --upgrade pip
#             pip install -r requirements.txt
#       - save_cache:
#           key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#           paths:
#             - "venv"
#       - run:
#           command: |
#             . venv/bin/activate
#             python -m pytest -v tests/test_script.py
#       - store_artifacts:
#           path: test-reports/
#           destination: tr1
#       - store_test_results:
#           path: test-reports/
#       - setup_remote_docker:
#           version: 19.03.13
#       - run:
#           name: Build and push Docker image
#           command: |
#             docker build -t $DOCKERHUB_USER/$IMAGE_NAME:$TAG .
#             docker login -u $DOCKERHUB_USER -p $DOCKER_HUB_PASSWORD_USER docker.io
#             docker push $DOCKERHUB_USER/$IMAGE_NAME:$TAG

# workflows:
#   build-test-deploy:
#     jobs:
#       - build-and-test
